services:
  charging_station_app:
    image: charging-station-app:0.1.0
    env_file:
      - .app.env
    ports:
      - 8000:8000
    depends_on: 
      - db_init
      - redis
    command: ["--bind", "0.0.0.0:8000"]
    user: "1001:1001"
  postgres_db:
    image: postgres:15
    restart: always
    env_file:
      - ./.postgres.env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis:7
    container_name: redis
    env_file:
      - .redis.env
    ports:
      - "6379:6379"
    volumes:
      - ./entrypoint/redis-entrypoint.sh:/usr/local/bin/redis-entrypoint.sh
    entrypoint: ["/usr/local/bin/redis-entrypoint.sh"]
    restart: always
    user: "redis:redis"
  db_init:
    image: postgres:15
    depends_on:
      - postgres_db
    env_file:
      - ./.db-init.env
    entrypoint: [ "bash", "/init-db.sh" ]
    volumes:
      - ./entrypoint/init-db.sh:/init-db.sh

  # Monitoring stack prometheus + grafana + alertmanager
  prometheus:
    image: prom/prometheus:v2.49.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./conf/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./conf/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
    restart: always

  alertmanager:
    image: prom/alertmanager:v0.27.0
    restart: unless-stopped
    volumes:
      - ./conf/alertmanager:/etc/alertmanager
    ports:
      - 9093:9093

  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      - .grafana.env
    depends_on:
      - prometheus
    volumes:
      - grafana-data:/var/lib/grafana
      - ./conf/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./conf/grafana/dashboards/dashboard.json:/var/lib/grafana/dashboards/dashboard.json
      - ./conf/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    restart: always

volumes:
  pgdata:
  grafana-data:
